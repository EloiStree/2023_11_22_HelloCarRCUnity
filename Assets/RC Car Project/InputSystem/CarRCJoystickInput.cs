//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/RC Car Project/InputSystem/CarRCJoystickInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CarRCJoystickInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CarRCJoystickInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CarRCJoystickInput"",
    ""maps"": [
        {
            ""name"": ""CarRCKeyboardAll"",
            ""id"": ""b0861c05-f103-4e73-a664-f04756d3fc7e"",
            ""actions"": [
                {
                    ""name"": ""LeftForward"",
                    ""type"": ""Button"",
                    ""id"": ""48da642b-7a29-48d6-b93e-d8c5b968cfc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBackward"",
                    ""type"": ""Button"",
                    ""id"": ""239f62ee-3a7d-4b99-81b5-e48d4b6eaf50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightForward"",
                    ""type"": ""Button"",
                    ""id"": ""bcc431ac-8c23-4490-9ee2-f5008efa2161"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBackward"",
                    ""type"": ""Button"",
                    ""id"": ""dafdcbb0-3730-4afe-aeb1-ebdaa207cd03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aea91b4f-a2e9-4ca1-ba05-ac883dca7e0c"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bba542cb-ed07-46de-a774-1a2cf9290c4c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1dbe8ea2-c65a-4260-84ae-dee871f83570"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6700eeed-2636-49b5-b8f0-80f84a5c729c"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d5e7383-dbde-4b3c-8146-e06102c2250e"",
                    ""path"": ""<HID::DragonRise Inc.   Generic   USB  Joystick  >/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a61c21b2-25ed-4602-a700-9af8386323a9"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d2527ec-5572-4c63-8779-8b91d4953a25"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b619200-3dbf-45a1-9a86-b5adec9d2587"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4901b1b4-f865-47a6-b309-a602fd236387"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddba2721-cdd0-4c9f-8d5c-8bad7fcbf389"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af8acd0c-ce09-4e4f-9e86-4bbf88dfec99"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c98387d-0e53-4de8-81a6-232a8a212ef9"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f766ca58-a16a-4132-80b1-1e58a1f691f3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b1bbea8-257d-4b32-9274-0b537357ac49"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9ae39ac-16b9-4736-916b-9477ab1bf481"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c0fb829-a30f-4954-9e05-6f2ab62acef3"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38e4b56c-2d75-438e-b79e-a3afb18f0c65"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39a030b5-b36b-45a6-9499-6cee66cc12c9"",
                    ""path"": ""<HID::DragonRise Inc.   Generic   USB  Joystick  >/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4d0858d-7a08-4f32-8db8-51b2ffb76167"",
                    ""path"": ""<HID::DragonRise Inc.   Generic   USB  Joystick  >/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffa97262-ad83-42c0-ba86-1000f4cbda7e"",
                    ""path"": ""<HID::DragonRise Inc.   Generic   USB  Joystick  >/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CarRCJoystickArrowAsInput"",
            ""id"": ""0bc34b39-3476-4b62-a116-474253a377f7"",
            ""actions"": [
                {
                    ""name"": ""LeftForward"",
                    ""type"": ""Button"",
                    ""id"": ""c3daaaa3-c8ee-4479-abf9-fde99d050529"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBackward"",
                    ""type"": ""Button"",
                    ""id"": ""7bf54a52-eafd-4a85-b2e2-e8c10f7878f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightForward"",
                    ""type"": ""Button"",
                    ""id"": ""4c80893f-0215-4427-81fd-77c04f8204c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBackward"",
                    ""type"": ""Button"",
                    ""id"": ""e7b5c4ea-a730-43fd-b371-f4559a187933"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e7dba4bc-9b54-402a-8ef6-d27b65c90046"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0273f8e-8f87-4667-847c-41e67460d39c"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bf129f0-ab6f-4fef-852d-756f709801c8"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56384046-d7bf-4f22-8d51-8e3c5a989db3"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CarRCJoystickvJoy"",
            ""id"": ""3b1fb531-aaaf-4cf1-9cd3-f1ef0d07c875"",
            ""actions"": [
                {
                    ""name"": ""LeftForward"",
                    ""type"": ""Button"",
                    ""id"": ""431f6036-0d69-40d9-89d6-4eec375289a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBackward"",
                    ""type"": ""Button"",
                    ""id"": ""ffe79b94-256b-4df7-aa0e-58dc92791996"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightForward"",
                    ""type"": ""Button"",
                    ""id"": ""9449cace-df7b-4d43-b0ad-7e01db0427c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBackward"",
                    ""type"": ""Button"",
                    ""id"": ""49f28c8c-08ab-4a4d-b0ab-dff716a30d80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""30bda181-e3fd-4106-8c3a-1491834c51af"",
                    ""path"": ""<HID::Shaul Eizikovich vJoy - Virtual Joystick>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd3be605-a34a-4597-b23a-8f7efbce6341"",
                    ""path"": ""<HID::Shaul Eizikovich vJoy - Virtual Joystick>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a912f1e-d456-4125-a81e-e298d5b64f2b"",
                    ""path"": ""<HID::Shaul Eizikovich vJoy - Virtual Joystick>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fee57b60-ccde-43e2-b7be-96ff7f2173a6"",
                    ""path"": ""<HID::Shaul Eizikovich vJoy - Virtual Joystick>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBackward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CarRCKeyboardAll
        m_CarRCKeyboardAll = asset.FindActionMap("CarRCKeyboardAll", throwIfNotFound: true);
        m_CarRCKeyboardAll_LeftForward = m_CarRCKeyboardAll.FindAction("LeftForward", throwIfNotFound: true);
        m_CarRCKeyboardAll_LeftBackward = m_CarRCKeyboardAll.FindAction("LeftBackward", throwIfNotFound: true);
        m_CarRCKeyboardAll_RightForward = m_CarRCKeyboardAll.FindAction("RightForward", throwIfNotFound: true);
        m_CarRCKeyboardAll_RightBackward = m_CarRCKeyboardAll.FindAction("RightBackward", throwIfNotFound: true);
        // CarRCJoystickArrowAsInput
        m_CarRCJoystickArrowAsInput = asset.FindActionMap("CarRCJoystickArrowAsInput", throwIfNotFound: true);
        m_CarRCJoystickArrowAsInput_LeftForward = m_CarRCJoystickArrowAsInput.FindAction("LeftForward", throwIfNotFound: true);
        m_CarRCJoystickArrowAsInput_LeftBackward = m_CarRCJoystickArrowAsInput.FindAction("LeftBackward", throwIfNotFound: true);
        m_CarRCJoystickArrowAsInput_RightForward = m_CarRCJoystickArrowAsInput.FindAction("RightForward", throwIfNotFound: true);
        m_CarRCJoystickArrowAsInput_RightBackward = m_CarRCJoystickArrowAsInput.FindAction("RightBackward", throwIfNotFound: true);
        // CarRCJoystickvJoy
        m_CarRCJoystickvJoy = asset.FindActionMap("CarRCJoystickvJoy", throwIfNotFound: true);
        m_CarRCJoystickvJoy_LeftForward = m_CarRCJoystickvJoy.FindAction("LeftForward", throwIfNotFound: true);
        m_CarRCJoystickvJoy_LeftBackward = m_CarRCJoystickvJoy.FindAction("LeftBackward", throwIfNotFound: true);
        m_CarRCJoystickvJoy_RightForward = m_CarRCJoystickvJoy.FindAction("RightForward", throwIfNotFound: true);
        m_CarRCJoystickvJoy_RightBackward = m_CarRCJoystickvJoy.FindAction("RightBackward", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CarRCKeyboardAll
    private readonly InputActionMap m_CarRCKeyboardAll;
    private List<ICarRCKeyboardAllActions> m_CarRCKeyboardAllActionsCallbackInterfaces = new List<ICarRCKeyboardAllActions>();
    private readonly InputAction m_CarRCKeyboardAll_LeftForward;
    private readonly InputAction m_CarRCKeyboardAll_LeftBackward;
    private readonly InputAction m_CarRCKeyboardAll_RightForward;
    private readonly InputAction m_CarRCKeyboardAll_RightBackward;
    public struct CarRCKeyboardAllActions
    {
        private @CarRCJoystickInput m_Wrapper;
        public CarRCKeyboardAllActions(@CarRCJoystickInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftForward => m_Wrapper.m_CarRCKeyboardAll_LeftForward;
        public InputAction @LeftBackward => m_Wrapper.m_CarRCKeyboardAll_LeftBackward;
        public InputAction @RightForward => m_Wrapper.m_CarRCKeyboardAll_RightForward;
        public InputAction @RightBackward => m_Wrapper.m_CarRCKeyboardAll_RightBackward;
        public InputActionMap Get() { return m_Wrapper.m_CarRCKeyboardAll; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CarRCKeyboardAllActions set) { return set.Get(); }
        public void AddCallbacks(ICarRCKeyboardAllActions instance)
        {
            if (instance == null || m_Wrapper.m_CarRCKeyboardAllActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CarRCKeyboardAllActionsCallbackInterfaces.Add(instance);
            @LeftForward.started += instance.OnLeftForward;
            @LeftForward.performed += instance.OnLeftForward;
            @LeftForward.canceled += instance.OnLeftForward;
            @LeftBackward.started += instance.OnLeftBackward;
            @LeftBackward.performed += instance.OnLeftBackward;
            @LeftBackward.canceled += instance.OnLeftBackward;
            @RightForward.started += instance.OnRightForward;
            @RightForward.performed += instance.OnRightForward;
            @RightForward.canceled += instance.OnRightForward;
            @RightBackward.started += instance.OnRightBackward;
            @RightBackward.performed += instance.OnRightBackward;
            @RightBackward.canceled += instance.OnRightBackward;
        }

        private void UnregisterCallbacks(ICarRCKeyboardAllActions instance)
        {
            @LeftForward.started -= instance.OnLeftForward;
            @LeftForward.performed -= instance.OnLeftForward;
            @LeftForward.canceled -= instance.OnLeftForward;
            @LeftBackward.started -= instance.OnLeftBackward;
            @LeftBackward.performed -= instance.OnLeftBackward;
            @LeftBackward.canceled -= instance.OnLeftBackward;
            @RightForward.started -= instance.OnRightForward;
            @RightForward.performed -= instance.OnRightForward;
            @RightForward.canceled -= instance.OnRightForward;
            @RightBackward.started -= instance.OnRightBackward;
            @RightBackward.performed -= instance.OnRightBackward;
            @RightBackward.canceled -= instance.OnRightBackward;
        }

        public void RemoveCallbacks(ICarRCKeyboardAllActions instance)
        {
            if (m_Wrapper.m_CarRCKeyboardAllActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICarRCKeyboardAllActions instance)
        {
            foreach (var item in m_Wrapper.m_CarRCKeyboardAllActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CarRCKeyboardAllActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CarRCKeyboardAllActions @CarRCKeyboardAll => new CarRCKeyboardAllActions(this);

    // CarRCJoystickArrowAsInput
    private readonly InputActionMap m_CarRCJoystickArrowAsInput;
    private List<ICarRCJoystickArrowAsInputActions> m_CarRCJoystickArrowAsInputActionsCallbackInterfaces = new List<ICarRCJoystickArrowAsInputActions>();
    private readonly InputAction m_CarRCJoystickArrowAsInput_LeftForward;
    private readonly InputAction m_CarRCJoystickArrowAsInput_LeftBackward;
    private readonly InputAction m_CarRCJoystickArrowAsInput_RightForward;
    private readonly InputAction m_CarRCJoystickArrowAsInput_RightBackward;
    public struct CarRCJoystickArrowAsInputActions
    {
        private @CarRCJoystickInput m_Wrapper;
        public CarRCJoystickArrowAsInputActions(@CarRCJoystickInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftForward => m_Wrapper.m_CarRCJoystickArrowAsInput_LeftForward;
        public InputAction @LeftBackward => m_Wrapper.m_CarRCJoystickArrowAsInput_LeftBackward;
        public InputAction @RightForward => m_Wrapper.m_CarRCJoystickArrowAsInput_RightForward;
        public InputAction @RightBackward => m_Wrapper.m_CarRCJoystickArrowAsInput_RightBackward;
        public InputActionMap Get() { return m_Wrapper.m_CarRCJoystickArrowAsInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CarRCJoystickArrowAsInputActions set) { return set.Get(); }
        public void AddCallbacks(ICarRCJoystickArrowAsInputActions instance)
        {
            if (instance == null || m_Wrapper.m_CarRCJoystickArrowAsInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CarRCJoystickArrowAsInputActionsCallbackInterfaces.Add(instance);
            @LeftForward.started += instance.OnLeftForward;
            @LeftForward.performed += instance.OnLeftForward;
            @LeftForward.canceled += instance.OnLeftForward;
            @LeftBackward.started += instance.OnLeftBackward;
            @LeftBackward.performed += instance.OnLeftBackward;
            @LeftBackward.canceled += instance.OnLeftBackward;
            @RightForward.started += instance.OnRightForward;
            @RightForward.performed += instance.OnRightForward;
            @RightForward.canceled += instance.OnRightForward;
            @RightBackward.started += instance.OnRightBackward;
            @RightBackward.performed += instance.OnRightBackward;
            @RightBackward.canceled += instance.OnRightBackward;
        }

        private void UnregisterCallbacks(ICarRCJoystickArrowAsInputActions instance)
        {
            @LeftForward.started -= instance.OnLeftForward;
            @LeftForward.performed -= instance.OnLeftForward;
            @LeftForward.canceled -= instance.OnLeftForward;
            @LeftBackward.started -= instance.OnLeftBackward;
            @LeftBackward.performed -= instance.OnLeftBackward;
            @LeftBackward.canceled -= instance.OnLeftBackward;
            @RightForward.started -= instance.OnRightForward;
            @RightForward.performed -= instance.OnRightForward;
            @RightForward.canceled -= instance.OnRightForward;
            @RightBackward.started -= instance.OnRightBackward;
            @RightBackward.performed -= instance.OnRightBackward;
            @RightBackward.canceled -= instance.OnRightBackward;
        }

        public void RemoveCallbacks(ICarRCJoystickArrowAsInputActions instance)
        {
            if (m_Wrapper.m_CarRCJoystickArrowAsInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICarRCJoystickArrowAsInputActions instance)
        {
            foreach (var item in m_Wrapper.m_CarRCJoystickArrowAsInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CarRCJoystickArrowAsInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CarRCJoystickArrowAsInputActions @CarRCJoystickArrowAsInput => new CarRCJoystickArrowAsInputActions(this);

    // CarRCJoystickvJoy
    private readonly InputActionMap m_CarRCJoystickvJoy;
    private List<ICarRCJoystickvJoyActions> m_CarRCJoystickvJoyActionsCallbackInterfaces = new List<ICarRCJoystickvJoyActions>();
    private readonly InputAction m_CarRCJoystickvJoy_LeftForward;
    private readonly InputAction m_CarRCJoystickvJoy_LeftBackward;
    private readonly InputAction m_CarRCJoystickvJoy_RightForward;
    private readonly InputAction m_CarRCJoystickvJoy_RightBackward;
    public struct CarRCJoystickvJoyActions
    {
        private @CarRCJoystickInput m_Wrapper;
        public CarRCJoystickvJoyActions(@CarRCJoystickInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftForward => m_Wrapper.m_CarRCJoystickvJoy_LeftForward;
        public InputAction @LeftBackward => m_Wrapper.m_CarRCJoystickvJoy_LeftBackward;
        public InputAction @RightForward => m_Wrapper.m_CarRCJoystickvJoy_RightForward;
        public InputAction @RightBackward => m_Wrapper.m_CarRCJoystickvJoy_RightBackward;
        public InputActionMap Get() { return m_Wrapper.m_CarRCJoystickvJoy; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CarRCJoystickvJoyActions set) { return set.Get(); }
        public void AddCallbacks(ICarRCJoystickvJoyActions instance)
        {
            if (instance == null || m_Wrapper.m_CarRCJoystickvJoyActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CarRCJoystickvJoyActionsCallbackInterfaces.Add(instance);
            @LeftForward.started += instance.OnLeftForward;
            @LeftForward.performed += instance.OnLeftForward;
            @LeftForward.canceled += instance.OnLeftForward;
            @LeftBackward.started += instance.OnLeftBackward;
            @LeftBackward.performed += instance.OnLeftBackward;
            @LeftBackward.canceled += instance.OnLeftBackward;
            @RightForward.started += instance.OnRightForward;
            @RightForward.performed += instance.OnRightForward;
            @RightForward.canceled += instance.OnRightForward;
            @RightBackward.started += instance.OnRightBackward;
            @RightBackward.performed += instance.OnRightBackward;
            @RightBackward.canceled += instance.OnRightBackward;
        }

        private void UnregisterCallbacks(ICarRCJoystickvJoyActions instance)
        {
            @LeftForward.started -= instance.OnLeftForward;
            @LeftForward.performed -= instance.OnLeftForward;
            @LeftForward.canceled -= instance.OnLeftForward;
            @LeftBackward.started -= instance.OnLeftBackward;
            @LeftBackward.performed -= instance.OnLeftBackward;
            @LeftBackward.canceled -= instance.OnLeftBackward;
            @RightForward.started -= instance.OnRightForward;
            @RightForward.performed -= instance.OnRightForward;
            @RightForward.canceled -= instance.OnRightForward;
            @RightBackward.started -= instance.OnRightBackward;
            @RightBackward.performed -= instance.OnRightBackward;
            @RightBackward.canceled -= instance.OnRightBackward;
        }

        public void RemoveCallbacks(ICarRCJoystickvJoyActions instance)
        {
            if (m_Wrapper.m_CarRCJoystickvJoyActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICarRCJoystickvJoyActions instance)
        {
            foreach (var item in m_Wrapper.m_CarRCJoystickvJoyActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CarRCJoystickvJoyActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CarRCJoystickvJoyActions @CarRCJoystickvJoy => new CarRCJoystickvJoyActions(this);
    public interface ICarRCKeyboardAllActions
    {
        void OnLeftForward(InputAction.CallbackContext context);
        void OnLeftBackward(InputAction.CallbackContext context);
        void OnRightForward(InputAction.CallbackContext context);
        void OnRightBackward(InputAction.CallbackContext context);
    }
    public interface ICarRCJoystickArrowAsInputActions
    {
        void OnLeftForward(InputAction.CallbackContext context);
        void OnLeftBackward(InputAction.CallbackContext context);
        void OnRightForward(InputAction.CallbackContext context);
        void OnRightBackward(InputAction.CallbackContext context);
    }
    public interface ICarRCJoystickvJoyActions
    {
        void OnLeftForward(InputAction.CallbackContext context);
        void OnLeftBackward(InputAction.CallbackContext context);
        void OnRightForward(InputAction.CallbackContext context);
        void OnRightBackward(InputAction.CallbackContext context);
    }
}
